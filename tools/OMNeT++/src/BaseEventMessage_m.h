//
// Generated file, do not edit! Created by nedtool 5.2 from BaseEventMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __BASEEVENTMESSAGE_M_H
#define __BASEEVENTMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "EventTypeDefinitions.h"
// }}

/**
 * Class generated from <tt>BaseEventMessage.msg:25</tt> by nedtool.
 * <pre>
 * message BaseEventMessage
 * {
 *     simtime_t injectionTime;
 *     int payloadType \@enum(EventType);
 * }
 * </pre>
 */
class BaseEventMessage : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::simtime_t injectionTime;
    int payloadType;

  private:
    void copy(const BaseEventMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BaseEventMessage&);

  public:
    BaseEventMessage(const char *name=nullptr, short kind=0);
    BaseEventMessage(const BaseEventMessage& other);
    virtual ~BaseEventMessage();
    BaseEventMessage& operator=(const BaseEventMessage& other);
    virtual BaseEventMessage *dup() const override {return new BaseEventMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual ::omnetpp::simtime_t getInjectionTime() const;
    virtual void setInjectionTime(::omnetpp::simtime_t injectionTime);
    virtual int getPayloadType() const;
    virtual void setPayloadType(int payloadType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BaseEventMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BaseEventMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BASEEVENTMESSAGE_M_H

