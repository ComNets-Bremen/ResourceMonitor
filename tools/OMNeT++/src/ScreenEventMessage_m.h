//
// Generated file, do not edit! Created by nedtool 5.2 from ScreenEventMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __SCREENEVENTMESSAGE_M_H
#define __SCREENEVENTMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "BaseEventMessage_m.h"
// }}

/**
 * Class generated from <tt>ScreenEventMessage.msg:24</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message ScreenEventMessage extends BaseEventMessage
 * {
 *     bool screenOn;
 * }
 * </pre>
 */
class ScreenEventMessage : public ::BaseEventMessage
{
  protected:
    bool screenOn;

  private:
    void copy(const ScreenEventMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ScreenEventMessage&);

  public:
    ScreenEventMessage(const char *name=nullptr, short kind=0);
    ScreenEventMessage(const ScreenEventMessage& other);
    virtual ~ScreenEventMessage();
    ScreenEventMessage& operator=(const ScreenEventMessage& other);
    virtual ScreenEventMessage *dup() const override {return new ScreenEventMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getScreenOn() const;
    virtual void setScreenOn(bool screenOn);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ScreenEventMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ScreenEventMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SCREENEVENTMESSAGE_M_H

